
def factors(n):
    """
    ============================================================================
     Description: Return Set of Factors of the given Integer.
    ----------------------------------------------------------------------------
        1. Factors(n) = {x for x*y=n, when x,y,n are positive int}
    ============================================================================
     Arguments:
    ----------------------------------------------------------------------------
        1. n : positive int
    ============================================================================
     Return: set of int (Set of Factors of a given positive number N).
    ============================================================================
    """
    assert type(n) == int
    assert n >= 1
    s = {1, n}
    for x in range(2, int(n**0.5)+1):
        if n % x == 0:
            y = n // x
            s = s.union({x, y})
    return s


def common_factors(a, b):
    """
    ============================================================================
     Description: Return set of Common Factors of 2 given Integers.
    ============================================================================
     Arguments:
    ----------------------------------------------------------------------------
        1. a : int
        2. b : int
    ============================================================================
     Return: set of int (Set of Common Factors).
    ============================================================================
    """
    assert type(a) == int
    assert type(b) == int
    assert a >= 1
    assert b >= 1
    return factors(a).intersection(factors(b))


def gcf(a, b):
    """
    ============================================================================
     Description: Return the Greatest Common Factor of two given integers.
    ============================================================================
     Arguments:
    ----------------------------------------------------------------------------
        1. a : int
        2. b : int
    ============================================================================
     Return: int (GCF of two given Integers).
    ============================================================================
    """
    assert type(a) == int
    assert type(b) == int
    assert a >= 1
    assert b >= 1
    common = common_factors(a, b)
    return max(common)


def is_prime(n):
    """
    ============================================================================
     Description: Return True if the given number is a Prime Number.
    ============================================================================
     Arguments:
    ----------------------------------------------------------------------------
        1. n : int
    ============================================================================
     Result: bool
    ============================================================================
    """
    assert type(n) == int
    if n <= 0:
        return False
    return len(factors(n) == 2)
