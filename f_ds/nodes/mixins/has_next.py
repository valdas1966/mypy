from typing import Generic, TypeVar

T = TypeVar('T', bound='HasNext')


class HasNext(Generic[T]):
    """
    ============================================================================
     Mixin-Class for Objects that have a Next-Object.
    ============================================================================
    """

    def __init__(self) -> None:
        """
        ========================================================================
         Init private Attributes.
        ========================================================================
        """
        self._next: HasNext = None

    @property
    def next(self) -> T:
        """
        ========================================================================
         Return the Next-Object.
        ========================================================================
        """
        return self._next

    @next.setter
    def next(self, val: T) -> None:
        """
        ========================================================================
         Set the Next-Object.
        ========================================================================
        """
        self._next = val
        self._update_next()
    def _update_next(self) -> None:
        """
        ========================================================================
         Make additional updates to the next object.
        ========================================================================
        """
        pass
