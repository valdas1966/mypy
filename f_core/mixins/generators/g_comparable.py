from f_core.mixins.comparable import Comparable


class Item(Comparable):
    """
    ============================================================================
     Item object for Comparable objects.
    ============================================================================
    """
    
    def __init__(self, val: int) -> None:
        """
        ========================================================================
         Init private Attributes.
        ========================================================================
        """
        self.val = val

    def key_comparison(self) -> int:
        """
        ========================================================================
         Compare Items by their value.
        ========================================================================
        """
        return self.val


class GenComparable:
    """
    ============================================================================
     Generator for Comparable objects.
    ============================================================================
    """

    @staticmethod
    def gen_list(length: int = 2) -> list[Item]:
        """
        ========================================================================
         Generate a list of Comparable objects.
        ========================================================================
        """
        return [Item(val=i+1) for i in range(length)]
