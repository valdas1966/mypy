from f_html.c_element import Element


def comment(comm):
    """
    ============================================================================
     Description: Generate a Comment Tag.
    ============================================================================
     Arguments:
    ----------------------------------------------------------------------------
        1. text : str (The Text of the Comment).
    ============================================================================
     Return: HTML Element.
    ============================================================================
    """
    comm = '!-- {0} --'.format(comm)
    return Element(tag=comm, is_empty=True)


def doctype():
    """
    ============================================================================
     Description: Generate DocType Tag.
    ============================================================================
     Return: HTML Element.
    ============================================================================    
    """
    return Element(tag='!DOCTYPE', attributes={'html': None}, is_empty=True)


def html():
    """
    ============================================================================
     Description: Generate HTML Tag.
    ============================================================================
     Return: HTML Element.
    ============================================================================
    """
    return Element(tag='html', attributes={'lang': 'en'})


def head(title=str()):
    """
    ============================================================================
     Description: Generate HEAD Tag.
    ============================================================================
     Arguments:
    ----------------------------------------------------------------------------
        1. title : str (Title of the web page).
    ============================================================================
     Return: HEAD Element (with nested TITLE element if exists).
    ============================================================================
    """
    ele_head = Element(tag='head')
    if title:
        ele_title = Element(tag='title', content=title)
        ele_head.nest(ele_title)
    return ele_head


def h(size=1):
    """
    ============================================================================
     Description: Generate HEADING Tag.
    ============================================================================
     Arguments:
    ----------------------------------------------------------------------------
        1. size : int (From 1 (BIG) to 6 (SMALL)).
    ============================================================================
     Return: HEADING Element.
    ============================================================================
    """
    tag = f'h{size}'
    return Element(tag=tag)
